# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
   build:
    runs-on: ubuntu-latest
    steps:
    
    # Set Environment
    - name: Set Time
      run:
        echo "BUILDDATE=$(date +"%Y%m%d.%H%M%S")" >> $GITHUB_ENV
    - name: Get SHORT SHA
      run:
        echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
    - name: Set App Name
      run:
        echo "APP_NAME=bookshelf-api" >> $GITHUB_ENV
    - name: Set Workdir
      run: 
        echo "WORKDIR=/home/medival/bookshelf-api" >> $GITHUB_ENV
    - name: Get Current Branch
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch 
    - name: Set DOCKER_REPO
      run: 
        echo "DOCKER_REPO=adipurnomo/${{ env.APP_NAME }}" >> $GITHUB_ENV
    - name: Set dockerImage
      run:
        echo "DOCKERIMAGE=${{ env.APP_NAME }}-${{ steps.extract_branch.outputs.branch }}" >> $GITHUB_ENV
    
    # Deploy using github pull
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
            whoami
            cd ${{ env.WORKDIR }}
            git checkout ${{ steps.extract_branch.outputs.branch }}
            git pull origin ${{ steps.extract_branch.outputs.branch }}
            npm i
            pm2 restart ${{ env.DOCKERIMAGE }}
            pm2 ls
            
    # Build Stage
    - uses: actions/checkout@v2
    - name: Use Node.js latest
      uses: actions/setup-node@v1
      with:
        node-version: 16.14.2
    - run: npm i
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.DOCKER_REPO }}-${{ steps.extract_branch.outputs.branch }}:${{ env.BUILDDATE }}
        
    # Deploy using Docker
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
            docker pull ${{ env.DOCKER_REPO }}-${{ steps.extract_branch.outputs.branch }}:${{ env.BUILDDATE }}
            CONTAINER=$(docker ps -a | grep ${{ env.DOCKERIMAGE }} | awk {'print $1'})
            echo $CONTAINER
            docker stop $CONTAINER
            sleep 5s
            docker rm $CONTAINER
            sleep 10s
            docker run -d --name ${{ env.DOCKERIMAGE }} -p 6000:5000 ${{ env.DOCKERIMAGE }}:${{ env.BUILDDATE }}
            
    - name: Remove Dockerimage
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
            RMDOCKERIMAGE=$(docker image ls  | tail -n 1 | awk {'print $3'})
            docker rmi $RMDOCKERIMAGE
            sleep 5s
            docker image ls
